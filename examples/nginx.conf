worker_processes  1;

events {
  worker_connections  1024;
}

error_log /dev/stdout notice;

env MEMCACHED_HOST;
env MEMCACHED_PORT;

http {
  include       mime.types;
  default_type  application/octet-stream;

  lua_package_path "/global_throttle/examples/?.lua;/global_throttle/lib/?.lua;;";

  lua_shared_dict counters 1m;
  lua_shared_dict memc_decision_cache 1m;

  keepalive_timeout  65;

  # Docker embedded DNS resolver IP is hardcoded:
  # https://github.com/moby/libnetwork/blob/d0951081b35fa4216fc4f0064bf065beeb55a74b/sandbox.go#L136.
  # So hardcoding here is not a problem.
  resolver 127.0.0.11;

  server {
    listen       8080;
    server_name  localhost;

    location /dict {
      rewrite_by_lua_block {
        require("examples").rewrite_dict()
      }

      content_by_lua_block {
        ngx.say("ok")
      }
    }

    location /memc {
      rewrite_by_lua_block {
        require("examples").rewrite_memc()
      }

      content_by_lua_block {
        ngx.say("ok")
      }
    }

    location /memclru {
      rewrite_by_lua_block {
        require("examples").rewrite_memc_with_lru()
      }

      content_by_lua_block {
        ngx.say("ok")
      }
    }

    location /memcdict {
      rewrite_by_lua_block {
        require("examples").rewrite_memc_with_dict()
      }

      content_by_lua_block {
        ngx.say("ok")
      }
    }

    location /stats {
      content_by_lua_block {
        require("examples").stats()
      }
    }

    location /all {
      content_by_lua_block {
        ngx.say("ok")
      }
    }

    location /output {
      content_by_lua_block {
        
        require("examples").process_output()
        ngx.say("ok")
      }
    }

    location /nothing {
      rewrite_by_lua_block {
        return ngx.exit(429)
      }
    }
  }
}
